(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{409:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规范"}},[t._v("#")]),t._v(" 规范")]),t._v(" "),s("h2",{attrs:{id:"_1-命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-命名规范"}},[t._v("#")]),t._v(" 1.命名规范")]),t._v(" "),s("h3",{attrs:{id:"_1-1-文件夹的命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-文件夹的命名"}},[t._v("#")]),t._v(" 1-1. 文件夹的命名")]),t._v(" "),s("ul",[s("li",[t._v("多个单词一般采用横线连接 ("),s("code",[t._v("kebab-case")]),t._v(")命名形式")])]),t._v(" "),s("h3",{attrs:{id:"_1-2-文件命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-文件命名"}},[t._v("#")]),t._v(" 1-2. 文件命名")]),t._v(" "),s("ul",[s("li",[t._v("单文件组件文件名称\n单文件组件的文件名应该要么始终是单词大写开头 ("),s("code",[t._v("PascalCase")]),t._v(")，要么始终是横线连接 ("),s("code",[t._v("kebab-case")]),t._v(")。"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// bad\nmycomponent.vue\nmyComponent.vue\n\n// good\nmy-component.vue\nMyComponent.vue\n")])])])]),t._v(" "),s("li",[t._v("紧密耦合的组件名funs\n和父组件紧密耦合的子组件应该以父组件名作为前缀命名。"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// bad\ncomponents/\n|- TodoList.vue\n|- TodoItem.vue\n└─ TodoButton.vue\n\n// good\ncomponents/\n|- TodoList.vue\n|- TodoListItem.vue\n└─ TodoListItemButton.vue\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"_1-3-样式命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-样式命名"}},[t._v("#")]),t._v(" 1-3. 样式命名")]),t._v(" "),s("ul",[s("li",[t._v("类名语义化，如内容区域的class类名定义为content，页脚区域的class类名定义为footer。")]),t._v(" "),s("li",[t._v("全局样式使用"),s("code",[t._v("camelCase")]),t._v("命名区分")]),t._v(" "),s("li",[t._v("私有class类名以全小写横线连接 ("),s("code",[t._v("kebab-case")]),t._v(")书写。")])]),t._v(" "),s("h3",{attrs:{id:"_1-4-常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-常量"}},[t._v("#")]),t._v(" 1-4. 常量")]),t._v(" "),s("ul",[s("li",[t._v("全大写，使用下横线("),s("code",[t._v("_")]),t._v(")拼接")])]),t._v(" "),s("h3",{attrs:{id:"_1-5-变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-变量"}},[t._v("#")]),t._v(" 1-5. 变量")]),t._v(" "),s("ul",[s("li",[t._v("命名格式为"),s("code",[t._v("camelCase")]),t._v("。")]),t._v(" "),s("li",[t._v("变量命名时，能做到见名知义。避免出现单个字母或语义不清的命名。")]),t._v(" "),s("li",[t._v("函数名应该是动词或者短语，代表某种行为，描述它们在做什么。(ex："),s("code",[t._v("getUser(){...}, setUser(){...}")]),t._v(")。")]),t._v(" "),s("li",[t._v("import 组件引入以"),s("code",[t._v("PascalCase")]),t._v("命名。(ex: "),s("code",[t._v('import SearchForm from "./SearchForm.vue"')]),t._v(")。")]),t._v(" "),s("li",[t._v("单文件组件名name以"),s("code",[t._v("PascalCase")]),t._v("书写。(ex: "),s("code",[t._v('name: "BaseInput"')]),t._v(" )(eslint)")])]),t._v(" "),s("h3",{attrs:{id:"_1-6-prop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-prop"}},[t._v("#")]),t._v(" 1-6. prop")]),t._v(" "),s("p",[t._v("在声明 prop 的时候，其命名应该始终使用 "),s("code",[t._v("camelCase")]),t._v("，而在模板中应该始终使用 "),s("code",[t._v("kebab-case")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// bad\nexport default {\n  props: {\n    'greeting-text': String,\n  },\n};\n\n// good\nexport default {\n  props: {\n    greetingText: String,\n  },\n};\n")])])]),s("h2",{attrs:{id:"_2-注释规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-注释规范"}},[t._v("#")]),t._v(" 2.注释规范")]),t._v(" "),s("p",[t._v("当开发Vue前端应用程序时，可以使用以下注释规范：")]),t._v(" "),s("h3",{attrs:{id:"_2-1-文件顶部注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-文件顶部注释"}},[t._v("#")]),t._v(" 2-1. 文件顶部注释")]),t._v(" "),s("p",[t._v("每个Vue文件的顶部应该有一个注释块，包含作者、日期、文件版本号、文件描述等信息。示例：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* @file: MyComponent.vue\n* @author: John\n* @description: This file contains the MyComponent component.\n* @date: 2023-05-30\n* @version: 1.0.0\n*/")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-2-模块注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-模块注释"}},[t._v("#")]),t._v(" 2-2. 模块注释")]),t._v(" "),s("p",[t._v("对于每个Vue组件，应该有一个注释块，解释其功能和用途。比如：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* @module: MyComponent\n* @description: This component is responsible for displaying the user profile.\n* @props:\n*   avatarUrl {String}: The URL of the user's avatar.\n*   username {String}: The user's username.\n*   bio {String}: The user's bio.\n* @events:\n*   onFollow {Function}: Fired when the user is followed.\n*/")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-3-方法注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-方法注释"}},[t._v("#")]),t._v(" 2-3. 方法注释")]),t._v(" "),s("p",[t._v("对于每个方法和生命周期钩子函数，应该有注释，说明其功能、参数、返回值。比如：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* Loads the user's data and sets up the component.\n* @param {Object} data - The user's data.\n* @returns {Promise} - A Promise that resolves when the data is loaded.\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... some code here ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-4-行内注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-行内注释"}},[t._v("#")]),t._v(" 2-4. 行内注释")]),t._v(" "),s("p",[t._v("在代码中使用注释，在关键代码行旁边提供上下文信息或解释。但应避免过多使用行内注释，以避免代码的可读性受到影响。比如：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// check if the user is authenticated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isAuthenticated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// log the user out")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'logout'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("总体来说，注释应该清晰、简洁、有用，并且遵循一致的格式。这将有助于提高代码可读性和可维护性。")]),t._v(" "),s("h2",{attrs:{id:"_3-代码风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码风格"}},[t._v("#")]),t._v(" 3.代码风格")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://v2.cn.vuejs.org/v2/style-guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue风格指南"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"_3-1-缩进-eslint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-缩进-eslint"}},[t._v("#")]),t._v(" 3-1. 缩进 (eslint)")]),t._v(" "),s("p",[t._v("缩进使用2个空格")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 4个空格\nfunction notifyUsers(users) {\n    users.forEach(user => {\n        const userRecord = database.lookup(user);\n        if (userRecord.isVerified()) {\n            notify(user);\n        }\n    });\n}\n\n// 2个空格\nfunction notifyUsers(users) {\n  users.forEach(user => {\n    const userRecord = database.lookup(user);\n    if (userRecord.isVerified()) {\n      notify(user);\n    }\n  });\n}\n")])])]),s("h3",{attrs:{id:"_3-2-元素属性上-使用双引号-不要使用单引号-eslint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-元素属性上-使用双引号-不要使用单引号-eslint"}},[t._v("#")]),t._v(" 3-2. 元素属性上，使用双引号，不要使用单引号(eslint)")]),t._v(" "),s("h3",{attrs:{id:"_3-3-元素属性名全小写-用中划线做分隔符-eslint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-元素属性名全小写-用中划线做分隔符-eslint"}},[t._v("#")]),t._v(" 3-3. 元素属性名全小写，用中划线做分隔符(eslint)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// bad\n<div :myName="myName"></div>\n\n// good\n<div :my-name="myName"></div>\n')])])]),s("h3",{attrs:{id:"_3-4-优先使用es6语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-优先使用es6语法"}},[t._v("#")]),t._v(" 3-4. 优先使用es6语法")]),t._v(" "),s("p",[t._v("例如：解构赋值、展开运算符、...")]),t._v(" "),s("h3",{attrs:{id:"_3-5-比较运算符-eslint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-比较运算符-eslint"}},[t._v("#")]),t._v(" 3-5. 比较运算符(eslint)")]),t._v(" "),s("ol",[s("li",[t._v("使用 === 和 !== 而非 == 和 !=")]),t._v(" "),s("li",[t._v("说明：使用 === 可以避免等于判断中隐式的类型转换，出错更少和定位错误更快。")])]),t._v(" "),s("h3",{attrs:{id:"_3-6-一个函数应该做一件事-避免在一个函数中执行多个操作。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-一个函数应该做一件事-避免在一个函数中执行多个操作。"}},[t._v("#")]),t._v(" 3-6. 一个函数应该做一件事，避免在一个函数中执行多个操作。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// bad\nfunction notifyUsers(users) {\n  users.forEach(user => {\n    const userRecord = database.lookup(user);\n    if (userRecord.isVerified()) {\n      notify(user);\n    }\n  });\n}\n\n//good\nfunction notifyVerifiedUsers(users) {\n  users.filter(isUserVerified).forEach(notify);\n}\n\nfunction isUserVerified(user) {\n  const userRecord = database.lookup(user);\n  return userRecord.isVerified();\n}\n")])])]),s("h3",{attrs:{id:"_3-7-三元表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-三元表达式"}},[t._v("#")]),t._v(" 3-7. 三元表达式")]),t._v(" "),s("blockquote",[s("p",[t._v("二选一条件下 三元表达式与if…else是可以互换的\n根据条件二选一给变量赋值的情况下，可使用三元表达式，其他复杂的逻辑处理不推荐\n如果有更好的实现，尽量不要使用三元表达式")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// bad\nlet score = val ? val : 0\n\n// good\nlet score = val || 0\n")])])]),s("h3",{attrs:{id:"_3-8-布尔转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-布尔转换"}},[t._v("#")]),t._v(" 3-8. 布尔转换")]),t._v(" "),s("blockquote",[s("p",[t._v("避免不必要的布尔转换，\n在if条件等情况中会自动转为布尔值，无需!!，而赋值仍需!!来强制转为布尔值")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// bad\nconst status = 1\nif (!!status) {\n}\nconst isDelete = status > 0 ? true : false\n\n// good\nconst status = 1\nif (status) {\n}\nconst isDelete = !!status // or const isDelete = Boolean(status)\n")])])]),s("h3",{attrs:{id:"_3-9-自闭合组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-自闭合组件"}},[t._v("#")]),t._v(" 3-9. 自闭合组件")]),t._v(" "),s("p",[t._v("在单文件组件中没有内容的组件应该是自闭合的。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\x3c!-- bad --\x3e\n<my-component></my-component>\n\n\x3c!-- good --\x3e\n<my-component />\n")])])]),s("h3",{attrs:{id:"_3-10-组件选项的顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-组件选项的顺序"}},[t._v("#")]),t._v(" 3-10. 组件选项的顺序")]),t._v(" "),s("p",[t._v("组件选项应该有统一的顺序。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("export default {\n  name: '',\n  mixins: [],\n  components: {},\n  props: {},\n  data() {},\n  computed: {},\n  watch: {},\n  created() {},\n  mounted() {},\n  destroyed() {},\n  methods: {},\n};\n")])])]),s("h3",{attrs:{id:"_3-11-单文件组件顶级标签的顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-11-单文件组件顶级标签的顺序"}},[t._v("#")]),t._v(" 3-11. 单文件组件顶级标签的顺序")]),t._v(" "),s("p",[t._v("单文件组件应该总是让顶级标签的顺序保持一致，且标签之间留有空行。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<template>\n  ...\n</template>\n\n<script>\n  /* ... */\n<\/script>\n\n<style>\n  /* ... */\n</style>\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);